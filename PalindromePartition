// Problem Link : https://leetcode.com/problems/palindrome-partitioning/
class Solution {
    public void resultSet(String s,int index,List<List<String>> res,List<String> ds)
    {
        if(index==s.length())
        {
            res.add(new ArrayList<String>(ds));
            return;
        }
        for(int i =index;i<s.length();i++)
        {
            if(isPalindrome(s,index,i))
            {
                ds.add(s.substring(index,i+1));
                resultSet(s,i+1,res,ds);
                ds.remove(ds.size()-1);
            }
        }
    }
    public boolean isPalindrome(String s,int start,int end)
    {
        while(start<=end)
        {
            if(s.charAt(start)!=s.charAt(end))
                return false;
            start++;
            end--;
        }
        return true;
    }
    public List<List<String>> partition(String s) {
       List<List<String>> res  = new ArrayList<>();
       List<String> subset = new ArrayList<>();
        resultSet(s,0,res,subset);
        return res;
    }
}
